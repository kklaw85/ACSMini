<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:iconPacks="clr-namespace:MahApps.Metro.IconPacks;assembly=MahApps.Metro.IconPacks.Ionicons"
                    xmlns:iconPacks2="clr-namespace:MahApps.Metro.IconPacks;assembly=MahApps.Metro.IconPacks.Zondicons"
                    xmlns:iconPacks1="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:C_UI_Manager="clr-namespace:NeoWisePlatform"
                    xmlns:MahApps="http://metro.mahapps.com/winfx/xaml/controls">

    <!-- Theme Brushes -->
    <Color x:Key="C_ICON_MOUSE_OVER"    A="255" R="255" G="165" B="0" />
    <Color x:Key="C_BLACK" A="255" R="0" G="0" B="0" />
    <Color x:Key="C_WHITE" A="255" R="255" G="255" B="255" />
    <Color x:Key="C_RED" A="255" R="255" G="0" B="0" />
    <Color x:Key="C_ICON_DEFAULT"    A="255" R="0" G="0" B="0" />
    <Color x:Key="C_ICON_SELECTED"    A="255" R="0" G="255" B="0" />
    <Color x:Key="C_ICON_PRESSED" A="255" R="59" G="138" B="253" />
    <Color x:Key="C_POS_FOREGROUND" A="255" R="255" G="0" B="0" />
    <Color x:Key="C_FONT_CYAN" A="255" R="0" G="255" B="200" />
    <Color x:Key="C_ORANGE" A="255" R="255" G="165" B="0" />
    <Color x:Key="C_GRAY_10" A="255" R="10" G="10" B="10" />
    <Color x:Key="C_GRAY_20" A="255" R="20" G="20" B="20" />
    <Color x:Key="C_GRAY_30" A="255" R="30" G="30" B="30" />
    <Color x:Key="C_GRAY_40" A="255" R="40" G="40" B="40" />
    <Color x:Key="C_GRAY_50" A="255" R="50" G="50" B="50" />
    <Color x:Key="C_GRAY_60" A="255" R="60" G="60" B="60" />
    <Color x:Key="C_GRAY_70" A="255" R="70" G="70" B="70" />
    <Color x:Key="C_GRAY_80" A="255" R="80" G="80" B="80" />
    <Color x:Key="C_GRAY_90" A="255" R="90" G="90" B="90" />
    <Color x:Key="C_GRAY_100" A="255" R="100" G="100" B="100" />
    <Color x:Key="C_GRAY_110" A="255" R="110" G="110" B="110" />
    <Color x:Key="C_GRAY_120" A="255" R="120" G="120" B="120" />
    <Color x:Key="C_GRAY_130" A="255" R="130" G="130" B="130" />
    <Color x:Key="C_GRAY_140" A="255" R="140" G="140" B="140" />
    <Color x:Key="C_GRAY_150" A="255" R="150" G="150" B="150" />
    <Color x:Key="C_GRAY_160" A="255" R="160" G="160" B="160" />
    <Color x:Key="C_GRAY_170" A="255" R="170" G="170" B="170" />
    <Color x:Key="C_GRAY_180" A="255" R="180" G="180" B="180" />
    <Color x:Key="C_GRAY_190" A="255" R="190" G="190" B="190" />
    <Color x:Key="C_GRAY_200" A="255" R="200" G="200" B="200" />
    <Color x:Key="C_GRAY_210" A="255" R="210" G="210" B="210" />
    <Color x:Key="C_GRAY_220" A="255" R="220" G="220" B="220" />
    <Color x:Key="C_GRAY_230" A="255" R="230" G="230" B="230" />
    <Color x:Key="C_GRAY_240" A="255" R="240" G="240" B="240" />
    <Color x:Key="C_GRAY_250" A="255" R="250" G="250" B="250" />

    <Color x:Key="CHECKBOX_BORDER" A="255" R="164" G="164" B="164"/>
    <Color x:Key="CHECKBOX_BG" A="255" R="0" G="0" B="0"/>
    <Color x:Key="C_ContentBoxBorderColor" A="255" R="80" G="80" B="80"/>
    <SolidColorBrush x:Key="BR_UC_BORDER" Color="#FFA4A4A4"/>
    <SolidColorBrush x:Key="BR_DIALOG" Color="#FF505050"/>
    <SolidColorBrush x:Key="BR_ORANGE"  Color="{StaticResource C_ORANGE}" />
    <SolidColorBrush x:Key="BR_TEXT_EDITED"  Color="{StaticResource C_ORANGE}" />
    <SolidColorBrush x:Key="BR_FONT_CYAN"  Color="{StaticResource C_FONT_CYAN}" />
    <SolidColorBrush x:Key="BR_POS_FOREGROUND"  Color="{StaticResource C_POS_FOREGROUND}" />
    <SolidColorBrush x:Key="BR_RED_BG"  Color="{StaticResource C_RED}" />
    <SolidColorBrush x:Key="BR_TEXT_INVALID"  Color="{StaticResource C_RED}" />
    <SolidColorBrush x:Key="BR_StatusBackGround" Color="#07074e" />
    <SolidColorBrush x:Key="BR_BLACK_BG"  Color="Black" />
    <SolidColorBrush x:Key="BR_GRAY_10"  Color="{StaticResource C_GRAY_10}" />
    <SolidColorBrush x:Key="BR_GRAY_20"  Color="{StaticResource C_GRAY_20}" />
    <SolidColorBrush x:Key="BR_GRAY_30"  Color="{StaticResource C_GRAY_30}" />
    <SolidColorBrush x:Key="BR_GRAY_40"  Color="{StaticResource C_GRAY_40}" />
    <SolidColorBrush x:Key="BR_GRAY_50"  Color="{StaticResource C_GRAY_50}" />
    <SolidColorBrush x:Key="BR_GRAY_60"  Color="{StaticResource C_GRAY_60}" />
    <SolidColorBrush x:Key="BR_GRAY_70"  Color="{StaticResource C_GRAY_70}" />
    <SolidColorBrush x:Key="BR_GRAY_80"  Color="{StaticResource C_GRAY_80}" />
    <SolidColorBrush x:Key="BR_GRAY_90"  Color="{StaticResource C_GRAY_90}" />
    <SolidColorBrush x:Key="BR_GRAY_100"  Color="{StaticResource C_GRAY_100}" />
    <SolidColorBrush x:Key="BR_GRAY_110"  Color="{StaticResource C_GRAY_110}" />

    <SolidColorBrush x:Key="BR_GRAY_120"  Color="{StaticResource C_GRAY_120}" />
    <SolidColorBrush x:Key="BR_GRAY_130"  Color="{StaticResource C_GRAY_130}" />
    <SolidColorBrush x:Key="BR_GRAY_140"  Color="{StaticResource C_GRAY_140}" />
    <SolidColorBrush x:Key="BR_GRAY_150"  Color="{StaticResource C_GRAY_150}" />
    <SolidColorBrush x:Key="BR_GRAY_160"  Color="{StaticResource C_GRAY_160}" />
    <SolidColorBrush x:Key="BR_GRAY_170"  Color="{StaticResource C_GRAY_170}" />
    <SolidColorBrush x:Key="BR_GRAY_180"  Color="{StaticResource C_GRAY_180}" />
    <SolidColorBrush x:Key="BR_GRAY_190"  Color="{StaticResource C_GRAY_190}" />
    <SolidColorBrush x:Key="BR_GRAY_200"  Color="{StaticResource C_GRAY_200}" />
    <SolidColorBrush x:Key="BR_GRAY_210"  Color="{StaticResource C_GRAY_210}" />
    <SolidColorBrush x:Key="BR_GRAY_220"  Color="{StaticResource C_GRAY_220}" />
    <SolidColorBrush x:Key="BR_GRAY_230"  Color="{StaticResource C_GRAY_230}" />
    <SolidColorBrush x:Key="BR_GRAY_240"  Color="{StaticResource C_GRAY_240}" />
    <SolidColorBrush x:Key="BR_GRAY_250"  Color="{StaticResource C_GRAY_250}" />

    <SolidColorBrush x:Key="BR_WHITE"  Color="{StaticResource C_WHITE}" />

    <SolidColorBrush x:Key="BR_MIDDLE_BG"  Color="#FF323232" />
    <SolidColorBrush x:Key="BR_SELECTED_BTN"  Color="{StaticResource C_BLACK}" />
    <SolidColorBrush x:Key="BR_ICON_MOUSE_OVER"  Color="{StaticResource C_ICON_MOUSE_OVER}" />
    <SolidColorBrush x:Key="BR_ICON_SELECTED"  Color="{StaticResource C_ICON_SELECTED}" />
    <SolidColorBrush x:Key="BR_ICON_DEFAULT"  Color="{StaticResource C_ICON_DEFAULT}" />
    <SolidColorBrush x:Key="BR_ICON_PRESSED"  Color="{StaticResource C_ICON_PRESSED}" />
    <Color x:Key="C_IconColor" A="255" R="77" G="77" B="77" />
    <Color x:Key="C_WindowsBackground" A="255" R="240" G="240" B="240" />
    <SolidColorBrush x:Key="WindowsBackground"  Color="{StaticResource C_GRAY_240}" />
    <SolidColorBrush x:Key="TextColor"  Color="{StaticResource C_GRAY_60}" />
    <SolidColorBrush x:Key="IconColor"  Color="{StaticResource C_IconColor}" />
    <SolidColorBrush x:Key="ContentBoxColor"  Color="LightGray" />
    <SolidColorBrush x:Key="ContentBoxBorderColor"  Color="{StaticResource C_GRAY_80}" />
    <SolidColorBrush x:Key="IconicTextColor"  Color="{StaticResource C_GRAY_150}" />
    <SolidColorBrush x:Key="MasterTheme"  Color="SteelBlue" />
    <SolidColorBrush x:Key="MinorTheme"  Color="LightSteelBlue" />
    <SolidColorBrush x:Key="BorderColor"  Color="{StaticResource C_GRAY_190}" />
    <SolidColorBrush x:Key="ButtonBG"  Color="WhiteSmoke" />
    <FlowDirection x:Key="FlowDirection_Default">LeftToRight</FlowDirection>
    <FlowDirection x:Key="FlowDirection_Reverse">RightToLeft</FlowDirection>

    <!--Taskbar BG-->
    <Color x:Key="C_Ready" A="0" R="0" G="0" B="0" />
    <Color x:Key="C_Running" A="255" R="0" G="200" B="34" />
    <Color x:Key="C_Pause" A="255" R="7" G="98" B="69" />
    <Color x:Key="C_Warning" A="255" R="255" G="120" B="0" />
    <Color x:Key="C_Error" A="255" R="255" G="0" B="0" />
    <Color x:Key="C_Homing" A="255" R="255" G="120" B="0" />
    <SolidColorBrush x:Key="Ready"  Color="{StaticResource C_Ready}" />
    <SolidColorBrush x:Key="Running"  Color="{StaticResource C_Running}" />
    <SolidColorBrush x:Key="Pause"  Color="{StaticResource C_Pause}" />
    <SolidColorBrush x:Key="Warning"  Color="{StaticResource C_Warning}" />
    <SolidColorBrush x:Key="Error"  Color="{StaticResource C_Error}" />
    <SolidColorBrush x:Key="Homing"  Color="{StaticResource C_Homing}" />

    <!--Taskbar FG-->
    <Color x:Key="C_Msg" A="255" R="255" G="255" B="255" />
    <Color x:Key="C_ErrWarn" A="255" R="255" G="255" B="255" />
    <SolidColorBrush x:Key="MsgTextFG"  Color="{StaticResource C_Msg}" />
    <SolidColorBrush x:Key="ErrWarn"  Color="{StaticResource C_ErrWarn}" />
    <!--Shape template-->
    <Style x:Key="Panel" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="7"/>
    </Style>
    <Style x:Key="Frameless" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="CornerRadius" Value="7"/>
    </Style>
    <Style x:Key="FrameWithShadow" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="{StaticResource MahApps.Colors.ThemeForeground}" ShadowDepth="5" BlurRadius="10" Opacity="0.4" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FrameWithoutShadow" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="3"/>
    </Style>
    <Style x:Key="MiniFrame" TargetType="Border">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="Background" Value="{StaticResource WindowsBackground}"/>
    </Style>
    <Style x:Key="IOInd" TargetType="Border">
        <Setter Property="BorderBrush" Value="Lime"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="CornerRadius" Value="2"/>
    </Style>

    <LinearGradientBrush x:Key="Gradient_MainMenu" StartPoint="0,0" EndPoint="1,0">
        <GradientStop Color="{StaticResource C_WHITE}"  Offset="0" />
        <GradientStop Color="{StaticResource C_WindowsBackground}"  Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="Gradient_SubMenu" StartPoint="0,0" EndPoint="1,0">
        <GradientStop Color="{StaticResource C_WindowsBackground}"  Offset="0" />
        <GradientStop Color="{StaticResource C_WHITE}"  Offset="1.0" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="Gradient_Panel" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="{StaticResource C_BLACK}"  Offset="0.0" />
        <GradientStop Color="{StaticResource C_GRAY_100}"  Offset="1.0" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="Gradient_SubPage" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="{StaticResource C_GRAY_100}"  Offset="0.0" />
        <GradientStop Color="{StaticResource C_GRAY_30}" Offset="0.4" />
        <GradientStop Color="{StaticResource C_GRAY_30}" Offset="0.6" />
        <GradientStop Color="{StaticResource C_GRAY_100}"  Offset="1.0" />
    </LinearGradientBrush>
    <RadialGradientBrush x:Key="Radial_MainPage">
        <GradientStop Color="{StaticResource majorgrad}"  Offset="0.0" />
        <GradientStop Color="{StaticResource C_DARK_GRAY_50}"  Offset="1.0" />
    </RadialGradientBrush>

    <!--TextBlock style-->
    <Style x:Key="TB_Default" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="FontFamily" Value="Segoe"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="5,0,0,0"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property ="HorizontalAlignment" Value="Left"/>
        <Setter Property ="VerticalAlignment" Value="Top"/>
    </Style>
    <Style x:Key="TB_MainTitle" TargetType="TextBlock" BasedOn="{StaticResource TB_Default}" >
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Margin" Value="0,5,0,5" />
    </Style>
    <Style x:Key="TB_PanelTitle" TargetType="TextBlock" BasedOn="{StaticResource TB_Default}" >
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="FontWeight" Value="DemiBold" />

    </Style>
    <Style x:Key="TB_ItemTitle" TargetType="TextBlock" BasedOn="{StaticResource TextBlock_Default}" >
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Height" Value="27"/>
    </Style>
    <Style x:Key="TB_ItemLabel_Left" TargetType="TextBlock" BasedOn="{StaticResource TextBlock_Default}" >
    </Style>
    <Style x:Key="TB_ItemLabel_Right" TargetType="TextBlock" BasedOn="{StaticResource TextBlock_Default}" >
        <Setter Property="Padding" Value="0,0,5,0"/>
        <Setter Property ="HorizontalAlignment"  Value="Right"/>
    </Style>
    <Style x:Key="TB_ItemLabel_Center" TargetType="TextBlock" BasedOn="{StaticResource TextBlock_Default}" >
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property ="HorizontalAlignment"  Value="Center"/>
    </Style>
    <Style x:Key="TB_ItemContent" TargetType="TextBlock" BasedOn="{StaticResource TB_Default}" >
        <Setter Property="Background" Value="{StaticResource ContentBoxColor}"/>
    </Style>
    <Style x:Key="TB_ItemContent_Right" TargetType="TextBlock" BasedOn="{StaticResource TB_ItemContent}">
        <Setter Property="Padding" Value="0,0,5,0"/>
        <Setter Property ="HorizontalAlignment"  Value="Right"/>
    </Style>
    <Style x:Key="TB_ItemContent_Left" TargetType="TextBlock" BasedOn="{StaticResource TB_ItemContent}">
        <Setter Property="Padding" Value="5,0,0,0"/>
        <Setter Property ="HorizontalAlignment"  Value="Left"/>
    </Style>
    <Style x:Key="TB_ItemContent_Center" TargetType="TextBlock" BasedOn="{StaticResource TB_ItemContent}">
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property ="HorizontalAlignment"  Value="Center"/>
    </Style>
    <Style x:Key="TB_ItemContent_Wrapped" TargetType="TextBlock" BasedOn="{StaticResource TB_ItemContent}">
        <Setter Property="TextWrapping" Value="WrapWithOverflow" />
    </Style>
    
    <!--Label style-->
    <Style x:Key="LB_Default" TargetType="Label">
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="FontFamily" Value="Segoe"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="5,0,0,0"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property ="HorizontalAlignment" Value="Left"/>
        <Setter Property ="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    <Style x:Key="LB_WindowTitle" TargetType="Label" BasedOn="{StaticResource LB_Default}">
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Margin" Value="0,5,0,5" />
    </Style>
    <Style x:Key="LB_MainTitle" TargetType="Label" BasedOn="{StaticResource LB_Default}">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Margin" Value="0,5,0,5" />
    </Style>
    <Style x:Key="LB_PanelTitle" TargetType="Label" BasedOn="{StaticResource LB_Default}">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="FontWeight" Value="Medium" />
    </Style>
    <Style x:Key="LB_ItemTitle" TargetType="Label" BasedOn="{StaticResource LB_Default}">
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Height" Value="27"/>
    </Style>
    <Style x:Key="LB_ItemContent" TargetType="Label" BasedOn="{StaticResource LB_Default}">
    </Style>
    <Style x:Key="LB_ItemContent_Left" TargetType="Label" BasedOn="{StaticResource LB_ItemContent}">
    </Style>
    <Style x:Key="LB_ItemContent_Right" TargetType="Label" BasedOn="{StaticResource LB_ItemContent}">
        <Setter Property="Padding" Value="0,0,5,0"/>
        <Setter Property ="HorizontalContentAlignment"  Value="Right"/>
    </Style>
    <Style x:Key="LB_ItemContent_Center" TargetType="Label" BasedOn="{StaticResource LB_ItemContent}">
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property ="HorizontalContentAlignment"  Value="Center"/>
    </Style>
    <Style x:Key="LB_ItemData" TargetType="Label" BasedOn="{StaticResource LB_Default}">
        <Setter Property="Background" Value="{StaticResource ContentBoxColor}"/>
    </Style>
    <Style x:Key="LB_ItemData_Left" TargetType="Label" BasedOn="{StaticResource LB_ItemData}">
    </Style>
    <Style x:Key="LB_ItemData_Right" TargetType="Label" BasedOn="{StaticResource LB_ItemData}">
        <Setter Property="Padding" Value="0,0,5,0"/>
        <Setter Property ="HorizontalContentAlignment"  Value="Right"/>
    </Style>
    <Style x:Key="LB_ItemData_Center" TargetType="Label" BasedOn="{StaticResource LB_ItemData}">
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property ="HorizontalContentAlignment"  Value="Center"/>
    </Style>
    <Style x:Key="LB_IconicTitle" TargetType="Label" BasedOn="{StaticResource LB_Default}">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="{StaticResource MinorTheme}"/>
    </Style>
    <Style x:Key="LB_ItemContent_MiniLeft" TargetType="Label" BasedOn="{StaticResource LB_ItemContent}">
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Height" Value="14"/>
        <Setter Property="Padding" Value="2,0,0,0"/>
    </Style>
    <Style x:Key="LB_ItemContent_MiniRight" TargetType="Label" BasedOn="{StaticResource LB_ItemContent_MiniLeft}">
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="Padding" Value="0,0,2,0"/>
        <Setter Property="Height" Value="14"/>
    </Style>
    <Style  x:Key="LB_PositioncornerTopRight" TargetType="Label" BasedOn="{StaticResource LB_ItemData_Center}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border
            BorderThickness="0" 
            Background="{StaticResource ContentBoxColor}" 
            Padding="0" 
            Margin="0"
            SnapsToDevicePixels="true" 
            CornerRadius="0,2,0,0">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Textbox style-->
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource ContentBoxBorderColor}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="FontFamily" Value="Segoe"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Background="Transparent" 
                x:Name="Bd" BorderBrush="{StaticResource ContentBoxBorderColor}"
                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="Width" Value="Auto">
                            <Setter Property="MinWidth" Value="50"/>
                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="20"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="Background" Value="{StaticResource BR_TEXT_INVALID}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TBx_Left" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
    </Style>
    <Style x:Key="TBx_Mini" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Height" Value="14"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>

    <!--Passwordbox style-->
    <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource {x:Type PasswordBox}}">
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource ContentBoxBorderColor}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="FontFamily" Value="Segoe"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border Background="Transparent" 
                x:Name="Bd" BorderBrush="{StaticResource ContentBoxBorderColor}"
                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="Width" Value="Auto">
                            <Setter Property="MinWidth" Value="50"/>
                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="20"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="Background" Value="{StaticResource BR_TEXT_INVALID}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Numeric up down style-->
    <Style 	x:Key="{x:Type MahApps:NumericUpDown}"
       TargetType="{x:Type MahApps:NumericUpDown}">
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="Background" Value="{StaticResource ContentBoxColor}"/>
        <Setter Property="HideUpDownButtons" Value="True"/>
        <Setter Property="BorderBrush" Value="{StaticResource ContentBoxBorderColor}"/>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="FontFamily" Value="Segoe"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="Background" Value="{StaticResource BR_TEXT_INVALID}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Divider style-->
    <Style x:Key="Vert_Divider" TargetType="Rectangle">
        <Setter Property="Height" Value="2"/>
        <Setter Property="Fill" Value="{StaticResource MasterTheme}"/>
        <Setter Property="RadiusX" Value="2"/>
        <Setter Property="RadiusY" Value="2"/>
        <Setter Property="Stroke" Value="Transparent"/>
        <Setter Property="StrokeThickness" Value="0"/>
    </Style>
    <Style x:Key="Hor_Divider" TargetType="Rectangle">
        <Setter Property="Width" Value="2"/>
        <Setter Property="Fill" Value="{StaticResource MasterTheme}"/>
        <Setter Property="RadiusX" Value="2"/>
        <Setter Property="RadiusY" Value="2"/>
        <Setter Property="Stroke" Value="Transparent"/>
        <Setter Property="StrokeThickness" Value="0"/>
    </Style>
    <!--Indicator style-->
    <Style x:Key="Rec_InputBig" TargetType="Rectangle">
        <Setter Property="Width" Value="35"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Fill" Value="Gray"/>
        <Setter Property="RadiusX" Value="2"/>
        <Setter Property="RadiusY" Value="2"/>
        <Setter Property="Stroke" Value="Transparent"/>
        <Setter Property="StrokeThickness" Value="1"/>
    </Style>
    <Style x:Key="Rec_Input" TargetType="Rectangle">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Fill" Value="Gray"/>
        <Setter Property="RadiusX" Value="3"/>
        <Setter Property="RadiusY" Value="3"/>
        <Setter Property="Stroke" Value="{StaticResource BR_GRAY_150}"/>
        <Setter Property="StrokeThickness" Value="1"/>
    </Style>
    <Style x:Key="Slot_Input" TargetType="Rectangle">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Fill" Value="Gray"/>
        <Setter Property="RadiusX" Value="1"/>
        <Setter Property="RadiusY" Value="1"/>
    </Style>

    <!--sub menu stackpanel style-->
    <Style x:Key="Button_Stack_Menu_TextBlock" TargetType="StackPanel">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="Width" Value="160"/>
    </Style>

    <!--Button label style-->
    <Style x:Key="Label_Setter_Button">
        <Setter Property="Label.Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="Label.Height" Value="auto"/>
        <Setter Property="Label.Width" Value="auto"/>
        <Setter Property="Label.Margin" Value="0"/>
        <Setter Property="Label.Padding" Value="0"/>
        <Setter Property="Label.HorizontalAlignment" Value="Center"/>
        <Setter Property="Label.VerticalAlignment" Value="Center"/>
        <Setter Property="Label.HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Label.VerticalContentAlignment" Value="Center"/>
        <Setter Property="Label.FontFamily" Value="Segoe"/>
        <Setter Property="Label.FontSize" Value="14"/>
        <Setter Property="Label.FontWeight" Value="Medium"/>
    </Style>
    <Style x:Key="Label_SetterRed_Button" BasedOn="{StaticResource Label_Setter_Button}">
        <Setter Property="Label.Foreground" Value="Red"/>
    </Style>
    <Style x:Key="Label_SetterLime_Button" BasedOn="{StaticResource Label_Setter_Button}">
        <Setter Property="Label.Foreground" Value="{StaticResource BR_ICON_SELECTED}"/>
    </Style>
    <Style x:Key="Label_Setter_ButtonDefault">
        <Setter Property="Label.Padding" Value="0"/>
        <Setter Property="Label.HorizontalAlignment" Value="Center"/>
        <Setter Property="Label.VerticalAlignment" Value="Center"/>
        <Setter Property="Label.HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Label.VerticalContentAlignment" Value="Center"/>
        <Setter Property="Label.FontFamily" Value="Segoe"/>
        <Setter Property="Label.FontSize" Value="14"/>
        <Setter Property="Label.FontWeight" Value="Medium"/>
    </Style>

    <!--Button style-->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{StaticResource ButtonBG}"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Style TargetType="Label" BasedOn="{StaticResource Label_Setter_Button}"/>
                        <Style TargetType="Image">
                            <Setter Property="Height" Value="20"/>
                            <Setter Property="Width" Value="20"/>
                            <Setter Property="Margin" Value="38,9,0,0"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid">
                        <Border Name="border" 
        				BorderThickness="1"
        				CornerRadius="2"
        				Background="{StaticResource ButtonBG}" BorderBrush="{StaticResource MahApps.Brushes.ThemeForeground}">
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Label x:Name="Label" Content="{TemplateBinding Content}"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"></Setter>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource C_ICON_MOUSE_OVER}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BR_ICON_MOUSE_OVER}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Cursor" Value="Wait"></Setter>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource C_ICON_SELECTED}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BR_ICON_SELECTED}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="Transparent"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Transparent" ShadowDepth="0" BlurRadius="0" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Label" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--<Style TargetType="{x:Type Button}" x:Key="BtnCommon">
        <Setter Property="Background" Value="WhiteSmoke"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Style TargetType="Label" BasedOn="{StaticResource Label_Setter_Button}"/>
                        <Style TargetType="Image">
                            <Setter Property="Height" Value="20"/>
                            <Setter Property="Width" Value="20"/>
                            <Setter Property="Margin" Value="38,9,0,0"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid">
                        <Border Name="border" 
        				BorderThickness="1"
        				CornerRadius="2"
        				Background="WhiteSmoke" BorderBrush="{StaticResource MahApps.Brushes.ThemeForeground}">
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Label x:Name="Label" Content="{TemplateBinding Content}"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"></Setter>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource C_ICON_MOUSE_OVER}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BR_ICON_MOUSE_OVER}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Cursor" Value="Wait"></Setter>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource C_ICON_SELECTED}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BR_ICON_SELECTED}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="Transparent"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Transparent" ShadowDepth="0" BlurRadius="0" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Label" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    <Style TargetType="{x:Type Button}" x:Key="BtnCommonRedText">
        <Setter Property="Background" Value="{StaticResource ButtonBG}"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Style TargetType="Label" BasedOn="{StaticResource Label_SetterRed_Button}"/>
                        <Style TargetType="Image">
                            <Setter Property="Height" Value="20"/>
                            <Setter Property="Width" Value="20"/>
                            <Setter Property="Margin" Value="38,9,0,0"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid">
                        <Border Name="border" 
        				BorderThickness="1"
        				CornerRadius="2"
        				Background="{StaticResource ButtonBG}" BorderBrush="{StaticResource MahApps.Brushes.ThemeForeground}">
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Label x:Name="Label" Content="{TemplateBinding Content}"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"></Setter>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource C_ICON_MOUSE_OVER}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BR_ICON_MOUSE_OVER}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Cursor" Value="Wait"></Setter>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource C_ICON_SELECTED}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BR_ICON_SELECTED}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="Transparent"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Transparent" ShadowDepth="0" BlurRadius="0" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Label" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="BtnCommonLimeText">
        <Setter Property="Background" Value="{StaticResource ButtonBG}"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Style TargetType="Label" BasedOn="{StaticResource Label_SetterLime_Button}"/>
                        <Style TargetType="Image">
                            <Setter Property="Height" Value="20"/>
                            <Setter Property="Width" Value="20"/>
                            <Setter Property="Margin" Value="38,9,0,0"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid">
                        <Border Name="border" 
        				BorderThickness="1"
        				CornerRadius="2"
        				Background="{StaticResource ButtonBG}" BorderBrush="{StaticResource MahApps.Brushes.ThemeForeground}">
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Label x:Name="Label" Content="{TemplateBinding Content}"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"></Setter>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource C_ICON_MOUSE_OVER}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BR_ICON_MOUSE_OVER}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Cursor" Value="Wait"></Setter>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource C_ICON_SELECTED}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BR_ICON_SELECTED}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="Transparent"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Transparent" ShadowDepth="0" BlurRadius="0" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Label" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Button_Menu" TargetType="Button">
        <Setter Property="Height" Value="56"/>
        <Setter Property="Width" Value="56"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ControlTemplate.Resources>
                        <Style TargetType="Label" BasedOn="{StaticResource Label_Setter_Button}"/>
                        <Style TargetType="Image">
                            <Setter Property="Height" Value="20"/>
                            <Setter Property="Width" Value="20"/>
                            <Setter Property="Margin" Value="38,9,0,0"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid">
                        <Border Name="border" 
        				BorderThickness="0">
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Label x:Name="Label" Content="{TemplateBinding Content}"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"></Setter>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource C_ICON_MOUSE_OVER}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BR_ICON_MOUSE_OVER}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Cursor" Value="Wait"></Setter>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource C_ICON_SELECTED}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BR_ICON_SELECTED}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="Transparent"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Transparent" ShadowDepth="0" BlurRadius="0" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Label" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Button_MenuSelected" TargetType="Button">
        <Setter Property="Height" Value="56"/>
        <Setter Property="Width" Value="56"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ControlTemplate.Resources>
                        <Style TargetType="Label" BasedOn="{StaticResource Label_Setter_Button}"/>
                        <Style TargetType="Image">
                            <Setter Property="Height" Value="20"/>
                            <Setter Property="Width" Value="20"/>
                            <Setter Property="Margin" Value="38,9,0,0"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid">
                        <Border Name="border" CornerRadius="2" BorderBrush="{StaticResource MahApps.Brushes.ThemeForeground}"
        				BorderThickness="1">
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Label x:Name="Label" Content="{TemplateBinding Content}"/>
                            </Grid>
                            <Border.Effect>
                                <DropShadowEffect Color="{StaticResource MahApps.Colors.ThemeForeground}" ShadowDepth="5" BlurRadius="10" Opacity="0.5" />
                            </Border.Effect>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Button_MenuRedFrame" TargetType="Button">
        <Setter Property="Height" Value="56"/>
        <Setter Property="Width" Value="56"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ControlTemplate.Resources>
                        <Style TargetType="Label" BasedOn="{StaticResource Label_Setter_Button}"/>
                        <Style TargetType="Image">
                            <Setter Property="Height" Value="20"/>
                            <Setter Property="Width" Value="20"/>
                            <Setter Property="Margin" Value="38,9,0,0"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid">
                        <Border Name="border" 
        				BorderThickness="0">
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Label x:Name="Label" Content="{TemplateBinding Content}"/>
                            </Grid>
                            <Border.Effect>
                                <DropShadowEffect Color="{StaticResource C_RED}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                            </Border.Effect>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"></Setter>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource C_ICON_MOUSE_OVER}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BR_ICON_MOUSE_OVER}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Cursor" Value="Wait"></Setter>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource C_ICON_SELECTED}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BR_ICON_SELECTED}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="Transparent"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Transparent" ShadowDepth="0" BlurRadius="0" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Label" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Button_MenuGreenFrame" TargetType="Button">
        <Setter Property="Height" Value="56"/>
        <Setter Property="Width" Value="56"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ControlTemplate.Resources>
                        <Style TargetType="Label" BasedOn="{StaticResource Label_Setter_Button}"/>
                        <Style TargetType="Image">
                            <Setter Property="Height" Value="20"/>
                            <Setter Property="Width" Value="20"/>
                            <Setter Property="Margin" Value="38,9,0,0"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid">
                        <Border Name="border" 
        				BorderThickness="0">
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Label x:Name="Label" Content="{TemplateBinding Content}"/>
                            </Grid>
                            <Border.Effect>
                                <DropShadowEffect Color="{StaticResource C_ICON_SELECTED}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                            </Border.Effect>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"></Setter>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource C_ICON_MOUSE_OVER}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BR_ICON_MOUSE_OVER}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Cursor" Value="Wait"></Setter>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource C_ICON_SELECTED}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BR_ICON_SELECTED}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="Transparent"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Transparent" ShadowDepth="0" BlurRadius="0" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Label" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Button_FrameMenu_LimeContent" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="56"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ControlTemplate.Resources>
                        <Style TargetType="Label" BasedOn="{StaticResource Label_SetterLime_Button}"/>
                        <Style TargetType="Image">
                            <Setter Property="Height" Value="20"/>
                            <Setter Property="Width" Value="20"/>
                            <Setter Property="Margin" Value="38,9,0,0"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid">
                        <Border Name="border" 
        				BorderThickness="1" CornerRadius="2" BorderBrush="{StaticResource MahApps.Brushes.ThemeForeground}">
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Label x:Name="Label" Content="{TemplateBinding Content}"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"></Setter>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource C_ICON_MOUSE_OVER}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BR_ICON_MOUSE_OVER}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Cursor" Value="Wait"></Setter>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource C_ICON_SELECTED}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BR_ICON_SELECTED}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="Transparent"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Transparent" ShadowDepth="0" BlurRadius="0" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Label" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Button_FrameMenu_RedContent" TargetType="Button">
        <Setter Property="Height" Value="56"/>
        <Setter Property="Width" Value="56"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ControlTemplate.Resources>
                        <Style TargetType="Label" BasedOn="{StaticResource Label_SetterRed_Button}"/>
                        <Style TargetType="Image">
                            <Setter Property="Height" Value="20"/>
                            <Setter Property="Width" Value="20"/>
                            <Setter Property="Margin" Value="38,9,0,0"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid">
                        <Border Name="border" 
        				BorderThickness="1" CornerRadius="2" BorderBrush="{StaticResource MahApps.Brushes.ThemeForeground}">
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Label x:Name="Label" Content="{TemplateBinding Content}"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"></Setter>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource C_ICON_MOUSE_OVER}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BR_ICON_MOUSE_OVER}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Cursor" Value="Wait"></Setter>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource C_RED}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BR_ICON_SELECTED}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="Transparent"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Transparent" ShadowDepth="0" BlurRadius="0" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Label" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Button_FrameMenu" TargetType="Button">
        <Setter Property="Height" Value="56"/>
        <Setter Property="Width" Value="56"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ControlTemplate.Resources>
                        <Style TargetType="Label" BasedOn="{StaticResource Label_Setter_Button}"/>
                        <Style TargetType="Image">
                            <Setter Property="Height" Value="20"/>
                            <Setter Property="Width" Value="20"/>
                            <Setter Property="Margin" Value="38,9,0,0"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid">
                        <Border Name="border" 
        				BorderThickness="1" CornerRadius="2" BorderBrush="{StaticResource MahApps.Brushes.ThemeForeground}">
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Label x:Name="Label" Content="{TemplateBinding Content}"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"></Setter>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource C_ICON_MOUSE_OVER}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BR_ICON_MOUSE_OVER}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Cursor" Value="Wait"></Setter>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource C_ICON_SELECTED}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BR_ICON_SELECTED}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="Transparent"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Transparent" ShadowDepth="0" BlurRadius="0" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Label" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Button_RedFrameMenu" TargetType="Button">
        <Setter Property="Height" Value="56"/>
        <Setter Property="Width" Value="56"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ControlTemplate.Resources>
                        <Style TargetType="Label" BasedOn="{StaticResource Label_Setter_Button}"/>
                        <Style TargetType="Image">
                            <Setter Property="Height" Value="20"/>
                            <Setter Property="Width" Value="20"/>
                            <Setter Property="Margin" Value="38,9,0,0"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid">
                        <Border Name="border" 
        				BorderThickness="1" CornerRadius="2" BorderBrush="{StaticResource BR_RED_BG}">
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Label x:Name="Label" Content="{TemplateBinding Content}"/>
                            </Grid>
                            <Border.Effect>
                                <DropShadowEffect Color="{StaticResource C_RED}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                            </Border.Effect>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"></Setter>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource C_ICON_MOUSE_OVER}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BR_ICON_MOUSE_OVER}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Cursor" Value="Wait"></Setter>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource C_ICON_SELECTED}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BR_ICON_SELECTED}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="Transparent"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Transparent" ShadowDepth="0" BlurRadius="0" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Label" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Button_GreenFrameMenu" TargetType="Button">
        <Setter Property="Height" Value="56"/>
        <Setter Property="Width" Value="56"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ControlTemplate.Resources>
                        <Style TargetType="Label" BasedOn="{StaticResource Label_Setter_Button}"/>
                        <Style TargetType="Image">
                            <Setter Property="Height" Value="20"/>
                            <Setter Property="Width" Value="20"/>
                            <Setter Property="Margin" Value="38,9,0,0"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid">
                        <Border Name="border" 
        				BorderThickness="1" CornerRadius="2" BorderBrush="{StaticResource BR_ICON_SELECTED}">
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Label x:Name="Label" Content="{TemplateBinding Content}"/>
                            </Grid>
                            <Border.Effect>
                                <DropShadowEffect Color="{StaticResource C_ICON_SELECTED}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                            </Border.Effect>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"></Setter>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource C_ICON_MOUSE_OVER}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BR_ICON_MOUSE_OVER}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Cursor" Value="Wait"></Setter>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource C_ICON_SELECTED}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BR_ICON_SELECTED}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="Transparent"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Transparent" ShadowDepth="0" BlurRadius="0" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Label" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Button_W40H40" TargetType="Button">
        <!--<Setter Property="Background" Value="Transparent"/>-->
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ControlTemplate.Resources>
                        <Style TargetType="Label" BasedOn="{StaticResource Label_Setter_Button}"/>
                        <Style TargetType="Image">
                            <Setter Property="Height" Value="20"/>
                            <Setter Property="Width" Value="20"/>
                            <Setter Property="Margin" Value="38,9,0,0"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid">
                        <Border Name="border" 
        				BorderThickness="1"
        				CornerRadius="2">
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Label x:Name="Label" Content="{TemplateBinding Content}"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"></Setter>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource C_ICON_MOUSE_OVER}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BR_ICON_MOUSE_OVER}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Cursor" Value="Wait"></Setter>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource C_ICON_SELECTED}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BR_ICON_SELECTED}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="Transparent"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Transparent" ShadowDepth="0" BlurRadius="0" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Label" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Button_RedContent" TargetType="Button">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="56"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ControlTemplate.Resources>
                        <Style TargetType="Label" BasedOn="{StaticResource Label_Setter_Button}">
                            <Setter Property="Foreground" Value="{StaticResource BR_TEXT_INVALID}"/>
                        </Style>
                        <Style TargetType="Image">
                            <Setter Property="Height" Value="20"/>
                            <Setter Property="Width" Value="20"/>
                            <Setter Property="Margin" Value="38,9,0,0"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid">
                        <Border Name="border" 
        				BorderThickness="1"
        				CornerRadius="2"
        				Background="{StaticResource BR_ICON_DEFAULT}" BorderBrush="{StaticResource BR_ICON_DEFAULT}">
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Label x:Name="Label" Content="{TemplateBinding Content}"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"></Setter>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource C_ICON_MOUSE_OVER}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BR_ICON_MOUSE_OVER}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Cursor" Value="Wait"></Setter>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource C_ICON_SELECTED}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BR_ICON_SELECTED}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="Transparent"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Transparent" ShadowDepth="0" BlurRadius="0" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Label" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ListView style-->
    <Style TargetType="{x:Type ListView}" BasedOn="{StaticResource MahApps.Styles.ListView}">
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SelectionMode" Value="Single"/>
    </Style>

    <!--Datagrid style-->
    <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource MahApps.Styles.DataGrid}">
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
    </Style>

    <!--RadioButton style-->
    <Style TargetType="{x:Type RadioButton}" x:Key="{x:Type RadioButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Canvas>
                        <BulletDecorator Cursor="Hand">
                            <BulletDecorator.Bullet>
                                <Grid Height="15" Width="15">
                                    <!--Define size of the Bullet-->
                                    <!--The two borders-->
                                    <Border Name="RadioOuter" Background="{StaticResource ContentBoxColor}" BorderBrush="{StaticResource ContentBoxColor}" BorderThickness="1" CornerRadius="99" />
                                </Grid>
                            </BulletDecorator.Bullet>
                            <!--Text element-->
                        </BulletDecorator>
                        <Label Content="{TemplateBinding Content}"/>
                    </Canvas>
                    <ControlTemplate.Resources>
                        <Style TargetType="Label">
                            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
                            <Setter Property="Width" Value="auto"/>
                            <Setter Property="Height" Value="25"/>
                            <Setter Property="Margin" Value="15,-4,0,0"/>
                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                            <Setter Property="VerticalContentAlignment" Value="Top"/>
                            <Setter Property="FontFamily" Value="Segoe"/>
                            <Setter Property="FontSize" Value="13"/>
                            <Setter Property="FontWeight" Value="Normal"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <!--If item is checked, trigger the visibility of the mark-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="RadioOuter" Property="Background" Value="{StaticResource BR_ICON_SELECTED}"/>
                            <Setter TargetName="RadioOuter" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource C_ICON_SELECTED}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="RadioOuter" Property="BorderBrush" Value="{StaticResource BR_ICON_SELECTED}"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="RadioOuter" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource C_ICON_MOUSE_OVER}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="RadioOuter" Property="BorderBrush" Value="{StaticResource BR_ICON_MOUSE_OVER}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Icon pack style-->
    <Style TargetType="{x:Type iconPacks2:PackIconZondicons}" >
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Margin" Value="2,2,2,2"/>
        <Setter Property="Foreground" Value="{StaticResource IconColor}"/>
    </Style>
    <Style TargetType="{x:Type iconPacks1:PackIconModern}" >
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Margin" Value="2,2,2,2"/>
        <Setter Property="Foreground" Value="{StaticResource IconColor}"/>
    </Style>
    <Style TargetType="{x:Type iconPacks1:PackIconFontAwesome}" >
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Margin" Value="2,2,2,2"/>
        <Setter Property="Foreground" Value="{StaticResource IconColor}"/>
    </Style>
    <Style TargetType="{x:Type iconPacks1:PackIconMaterial}" >
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Margin" Value="2,2,2,2"/>
        <Setter Property="Foreground" Value="{StaticResource IconColor}"/>
    </Style>
    <Style TargetType="{x:Type iconPacks1:PackIconRemixIcon}" >
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Margin" Value="2,2,2,2"/>
        <Setter Property="Foreground" Value="{StaticResource IconColor}"/>
    </Style>
    <Style TargetType="{x:Type iconPacks1:PackIconEntypo}" >
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Margin" Value="2,2,2,2"/>
        <Setter Property="Foreground" Value="{StaticResource IconColor}"/>
    </Style>

    <Style TargetType="{x:Type iconPacks:PackIconIonicons}" >
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Margin" Value="2,2,2,2"/>
        <Setter Property="Foreground" Value="{StaticResource IconColor}"/>
    </Style>

    <!--Button image style-->
    <Style x:Key="ImgBtn_W60H60" TargetType="Image">
        <Setter Property="Width" Value="60"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Stretch" Value="Uniform"/>
    </Style>
    <Style x:Key="ImgBtn_W40H40" TargetType="Image" BasedOn="{StaticResource ImgBtn_W60H60}">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
    </Style>
    <Style x:Key="ImgBtn_W25H25" TargetType="Image" BasedOn="{StaticResource ImgBtn_W60H60}">
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
    </Style>
    <Style x:Key="ImgBtn_W30H30" TargetType="Image" BasedOn="{StaticResource ImgBtn_W60H60}">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
    </Style>
    <Style x:Key="ImgBtn_W35H35" TargetType="Image" BasedOn="{StaticResource ImgBtn_W60H60}">
        <Setter Property="Width" Value="35"/>
        <Setter Property="Height" Value="35"/>
    </Style>
    <Style x:Key="ImgBtn_W45H45" TargetType="Image" BasedOn="{StaticResource ImgBtn_W60H60}">
        <Setter Property="Width" Value="45"/>
        <Setter Property="Height" Value="45"/>
    </Style>
    <Style x:Key="ImgButtonFit" TargetType="Image">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Stretch" Value="Uniform"/>
    </Style>
    <!--Checkbox style-->
    <Style x:Key="{x:Type CheckBox}"
       TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                        <Style TargetType="Label">
                            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
                            <Setter Property="Width" Value="Auto"/>
                            <Setter Property="Padding" Value="20,0,0,0"/>
                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                            <Setter Property="VerticalContentAlignment" Value="Top"/>
                            <Setter Property="HorizontalAlignment" Value="Left"/>
                            <Setter Property="VerticalAlignment" Value="Top"/>
                            <Setter Property="FontFamily" Value="Segoe"/>
                            <Setter Property="FontSize" Value="13"/>
                            <Setter Property="FontWeight" Value="Normal"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Label Content="{TemplateBinding Content}"/>
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border" Width="13" Height="13" CornerRadius="2" BorderThickness="1">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="{StaticResource CHECKBOX_BORDER}"/>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <SolidColorBrush Color="{StaticResource CHECKBOX_BG}"/>
                                    </Border.Background>
                                </Border>
                            </BulletDecorator.Bullet>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate">
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </BulletDecorator>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource C_ICON_SELECTED}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource BR_ICON_SELECTED}"/>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BR_ICON_SELECTED}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource C_ICON_MOUSE_OVER}" ShadowDepth="0" BlurRadius="10" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource BR_ICON_MOUSE_OVER}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>


    <!--Combobox style-->
    <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="{StaticResource C_ContentBoxBorderColor}" />
    <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="Transparent" />
    <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="Transparent" />
    <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="{StaticResource C_GRAY_120}" />
    <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
              CornerRadius="0" BorderThickness="1, 1, 1, 1" 
              Background="{StaticResource ContentBoxColor}" />
            <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="{StaticResource BR_GRAY_140}" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="{StaticResource ContentBoxColor}" />

            <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="#444"
            VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource BR_GRAY_180}"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource BR_GRAY_40}"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                <Setter Property="Border.BorderBrush" TargetName="Border" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{x:Type ComboBox}"  TargetType="{x:Type ComboBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="TextElement.Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                        <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                        <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox" >
                                    <Border Name="PART_ContentHost" Focusable="False" />
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        <!-- Popup showing items -->
                        <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                <Border Name="DropDownBorder" Background="{StaticResource ContentBoxBorderColor}" Margin="0, 1, 0, 0"
                        CornerRadius="0" BorderThickness="1,1,1,1" 
                        BorderBrush="{StaticResource MasterTheme}"/>
                                <ScrollViewer Margin="1" SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                            <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                            <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Expander style-->
    <SolidColorBrush x:Key="Expander.MouseOver.Circle.Stroke" Color="#FF5593FF"/>
    <SolidColorBrush x:Key="Expander.MouseOver.Circle.Fill" Color="#FFF3F9FF"/>
    <SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="#FF000000"/>
    <SolidColorBrush x:Key="Expander.Pressed.Circle.Stroke" Color="#FF3C77DD"/>
    <SolidColorBrush x:Key="Expander.Pressed.Circle.Fill" Color="#FFD9ECFF"/>
    <SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="#FF000000"/>
    <SolidColorBrush x:Key="Expander.Disabled.Circle.Stroke" Color="#FFBCBCBC"/>
    <SolidColorBrush x:Key="Expander.Disabled.Circle.Fill" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="#FF707070"/>
    <SolidColorBrush x:Key="Expander.Static.Circle.Fill" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="Expander.Static.Circle.Stroke" Color="#FF333333"/>
    <SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="#FF333333"/>
    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}" CornerRadius="0">
                        <Grid Background="Transparent" SnapsToDevicePixels="False" Width="30">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="40"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="25" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="25"/>
                                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                            </Grid>
                            <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="180"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                            </Grid>
                            <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                            </Grid>
                            <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                            <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                            <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                        <DockPanel>
                            <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{DynamicResource 262Toggle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="262Toggle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle" Fill="{StaticResource MasterTheme}" HorizontalAlignment="Center" Margin="0,0,0,0" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Top" Width="19"/>
                                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" Margin="0,6,0,0" SnapsToDevicePixels="false" StrokeThickness="2" VerticalAlignment="Top">
                                    <Path.Stroke>
                                        <SolidColorBrush Color="{DynamicResource C_DARK_GRAY_70}"/>
                                    </Path.Stroke>
                                </Path>
                            </Grid>
                            <ContentPresenter HorizontalAlignment="Left" Margin="25,0,0,0" Grid.Row="0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center" Style="{DynamicResource ExpanderContentPresenter}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderContentPresenter" TargetType="{x:Type ContentPresenter}">
        <Setter Property="TextBlock.Foreground" Value="{StaticResource TextColor}"/>
    </Style>
    <Style x:Key="MetroTabItemStyle" TargetType="{x:Type MahApps:MetroTabControl}">
        <Setter Property="MahApps:HeaderedControlHelper.HeaderFontSize" Value="20"/>
        <Setter Property="MahApps:HeaderedControlHelper.HeaderFontWeight" Value="Medium"/>
        <Setter Property="Margin" Value="3,2,2,3"/>
    </Style>
</ResourceDictionary>